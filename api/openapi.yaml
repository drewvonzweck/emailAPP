#
# CSE183 Assignment 9 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mail:   
    get:
      description: Returns all EMail
      parameters:
        - in: query
          name: mailbox
          schema:
            type: string
          required: false
          description: Name of Mailbox
        - in: query
          name: from
          schema:
            type: string
          required: false
          description: From full email or partial name
      responses:
        200:
          description: Email Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        404:
          description: Mailbox Does Not Exist
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new Email
      parameters:
        - in: query
          name: mailbox
          schema:
            type: string
          required: false
          description: Name of Mailbox
      requestBody:
        description: Email to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email2Add'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Unexpected Properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /read:   
    get:
      description: Returns all EMail
      parameters:
        - in: query
          name: mailbox
          schema:
            type: string
          required: false
          description: Name of Mailbox
        - in: query
          name: from
          schema:
            type: string
          required: false
          description: From full email or partial name
      responses:
        200:
          description: Email Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        404:
          description: Mailbox Does Not Exist
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /read/{id}:
    put:
      description: Mark Email as Read or Unread
      parameters:
        - name: id
          in: path
          description: UUID of the email
          required: true
          schema:
            type: string
      responses:
        204:
          description: Succesful Update
        404:
          description: Email not found
  
  /starred:
    get:
      description: Returns number of Starred Emails
      responses:
        200:
          description: Number of starred Emails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Starred'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /starred/{id}:
    put:
      description: Mark Email as Starred or Unstarred
      parameters:
        - name: id
          in: path
          description: UUID of the email
          required: true
          schema:
            type: string
      responses:
        204:
          description: Succesful Update
        404:
          description: Email not found

  /usermailboxes:
    get:
      description: Returns all User Mailboxes
      responses:
        200:
          description: Array of all User Mailboxes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailboxes'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mailboxes:
    get:
      description: Returns all Mailboxes
      responses:
        200:
          description: Array of all Mailboxes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropDownMailboxes'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mail/{id}:
    get:
      description: Returns a single email
      parameters:
      - name: id
        in: path
        description: ID of the email
        required: true
        schema:
          type: string
      responses:
        200:
          description: Email found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        404:
          description: Email not found
    delete:
      description: Deletes a Single Email
      parameters:
      - name: id
        in: path
        description: ID of the email
        required: true
        schema:
          type: string
      responses:
        204:
          description: Email Deleted
        404:
          description: Email not found
    put:
      description: Move Email
      parameters:
        - in: query
          name: mailbox
          schema: 
            type: string
          required: true
        - name: id
          in: path
          description: UUID of the email
          required: true
          schema:
            type: string
      responses:
        204:
          description: Succesful move
        404:
          description: Email not found
        409:
          description: Cannot move email to Sent

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string

    Starred:
      type: integer

    Mailboxes:
      type: array
      items:
        $ref: '#/components/schemas/Box'

    DropDownMailboxes:
      type: array
      items:
        $ref: '#/components/schemas/DropDownBox'
    
    Box:
      type: string
    
    DropDownBox:
      type: object
      properties:
        name:
          type: string

    EmailResponse:
      type: array
      items:
        $ref: '#/components/schemas/Mailbox'
    
    Mailbox:
      type: object
      properties:
        name:
          type: string
        mail:
          type: array
          items:
            $ref: '#/components/schemas/EmailReturn'
          

    Email:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        from:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        received:
          type: string
        sent:
          type: string
        content:
          type: string
        subject:
          type: string
        toShow:
          type: string
        read:
          type: boolean
        starred:
          type: boolean
      required:
        - to 
        - from
        - subject
        - received
        - sent
        - content     
    Email2Add:
      type: object
      properties:
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        content:
          type: string
        subject:
          type: string
      required:
        - to 
        - subject
        - content     
    EmailReturn:
      type: object
      properties:
        id: 
          type: string
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        from:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        received:
          type: string
        sent:
          type: string
        subject:
          type: string
        content:
          type: string
        toShow:
          type: string
        read:
          type: boolean
        starred:
          type: boolean
      required:
        - to 
        - from
        - subject
        - received
        - sent   
        - content
        - toShow 
        - read